version: 2.1

orbs:
  ambitioneng:
    executors:
      python:
        working_directory: /code
        docker:
          - image: opus10/circleci-python-library:2024-10-26
            environment:
              # Ensure makefile commands are not wrapped in "docker compose run"
              EXEC_WRAPPER: ''
        {%- if cookiecutter.is_django == "True" %}
              DATABASE_URL: postgres://root@localhost/circle_test?sslmode=disable
          - image: cimg/postgres:<<parameters.pg_version>>
            environment:
              POSTGRES_USER: root
              POSTGRES_DB: circle_test
              POSTGRES_PASSWORD: password
        parameters:
          pg_version:
            type: "string"
            default: "14.4"
        {%- endif %}
    commands:
      test:
        steps:
          - checkout
          - restore_cache:
              key: v5-{{ '{{' }} checksum "poetry.lock" {{ '}}' }}
          - run: make dependencies
          - run: make full-test-suite
          - save_cache:
              key: v5-{{ '{{' }} checksum "poetry.lock" {{ '}}' }}
              paths:
                - /home/circleci/.cache/pypoetry/
                - /code/.venv
                - /code/.tox

jobs:
  {%- if cookiecutter.is_django == "True" %}
  test_pg_min:
    executor:
      name: ambitioneng/python
      pg_version: "13.16"
    steps:
      - ambitioneng/test

  test_pg_max:
    executor:
      name: ambitioneng/python
      pg_version: "17.0"
    steps:
      - ambitioneng/test
  {%- else %}
  test:
    executor:
      name: ambitioneng/python
    steps:
      - ambitioneng/test
  {%- endif %}

  lint:
    executor: ambitioneng/python
    steps:
      - checkout
      - restore_cache:
          key: v5-{{ '{{' }} checksum "poetry.lock" {{ '}}' }}
      - run: make dependencies
      - run: make lint

  type_check:
    executor: ambitioneng/python
    steps:
      - checkout
      - restore_cache:
          key: v5-{{ '{{' }} checksum "poetry.lock" {{ '}}' }}
      - run: make dependencies
      - run: make type-check {% if not cookiecutter.check_types_in_ci == 'True' %}|| true{% endif %}

  deploy:
    executor: ambitioneng/python
    steps:
      - checkout
      - run: ssh-add -D
      - restore_cache:
          key: v5-{{ '{{' }} checksum "poetry.lock" {{ '}}' }}
      - run: make dependencies
      - run: poetry run python devops.py deploy

workflows:
  version: 2
  on_commit:
    jobs:
      {%- if cookiecutter.is_django == "True" %}
      - test_pg_min:
          filters:
            tags:
              only: /.*/
      - test_pg_max:
          filters:
            tags:
              only: /.*/
      {%- else %}
      - test:
          filters:
            tags:
              only: /.*/
      {%- endif %}
      - lint:
          filters:
            tags:
              only: /.*/
      - type_check:
          filters:
            tags:
              only: /.*/
      - deploy:
          context: python-library
          requires:
            {%- if cookiecutter.is_django == "True" %}
            - test_pg_min
            - test_pg_max
            {%- else %}
            - test
            {%- endif %}
            - lint
            - type_check
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /.*/
